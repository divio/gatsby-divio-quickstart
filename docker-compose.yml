version: "2.4"
services:
  web:
    # the application's web service (container) will use an image based on our Dockerfile
    build: "."
    # map the internal port 80 to port 8000 on the host
    ports:
      - "8000:80"
    # map the host directory to app (which allows us to see and edit files inside the container)
    volumes:
      # uncomment if you prefer to perform node install/gatsby build operations on the host
      # system - see the Divio Gatsby Quickstart how-to guide for an explanation
      - ".:/app:rw"
      - "./data:/data:rw"
    # the default command to run whenever the container is launched - this can be different from
    # the command built into the image
    command: gatsby develop --port 80 --host 0.0.0.0
    env_file: .env-local
    # if required, the URL 'postgres' or 'mysql' will point to the application's db service
    # - but remove the entire links section if not required
    # links:
    #   - "database_default"

  # # this entire section can be removed if you're not using a database
  #
  # database_default:
  #   # Select one of the following db configurations for the database
  #   image: postgres:9.6-alpine
  #   environment:
  #     POSTGRES_DB: "db"
  #     POSTGRES_HOST_AUTH_METHOD: "trust"
  #     SERVICE_MANAGER: "fsm-postgres"
  #   volumes:
  #     - ".:/app:rw"
  #
  #   image: mysql:5.7
  #   environment:
  #     MYSQL_DATABASE: "db"
  #     MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  #     SERVICE_MANAGER: "fsm-mysql"
  #   volumes:
  #     - ".:/app:rw"
  #     - "./data/db:/var/lib/mysql"
  #   healthcheck:
  #       test: "/usr/bin/mysql --user=root -h 127.0.0.1 --execute \"SHOW DATABASES;\""
  #       interval: 2s
  #       timeout: 20s
  #       retries: 10
